name: CI

on:
  push:
    branches: [ main, autobuild ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Build
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable

    - name: Install dependencies
      run: dart pub get

    - name: Analyze code
      run: dart analyze

    - name: Run tests
      run: dart test --exclude-tags=performance --exclude-tags=e2e

    - name: Run performance tests (manual trigger only)
      if: github.event_name == 'workflow_dispatch'
      run: dart test test/performance_test.dart
      continue-on-error: true

    - name: Build executable (Unix)
      if: runner.os != 'Windows'
      run: dart compile exe bin/furl.dart -o furl

    - name: Build executable (Windows)
      if: runner.os == 'Windows'
      run: dart compile exe bin/furl.dart -o furl.exe

    - name: Test executable (Unix)
      if: runner.os != 'Windows'
      run: ./furl --help || true

    - name: Test executable (Windows)
      if: runner.os == 'Windows'
      run: .\furl.exe --help || true
      shell: cmd

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable

    - name: Install dependencies
      run: dart pub get

    - name: Check formatting
      run: dart format --set-exit-if-changed .

    - name: Analyze code
      run: dart analyze --fatal-infos

    - name: Check dependencies
      run: dart pub deps
